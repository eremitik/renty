{"version":3,"sources":["actions/item.js","App.js","reducers/index.js","index.js"],"names":["url","getItems","dispatch","a","axios","get","data","type","payload","console","log","App","useDispatch","items","useSelector","state","useEffect","className","map","item","tags","title","description","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"gNAGMA,EAAM,8BAKCC,EAAW,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,+EAHFC,IAAMC,IAAIL,GAGR,gBAElBM,EAFkB,EAElBA,KACRJ,EAAS,CAAEK,KAAM,YAAaC,QAASF,IAHb,gDAK1BG,QAAQC,IAAR,MAL0B,yDAAN,uD,OCuBTC,MA1Bf,WAEE,IAAMT,EAAWU,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAO3C,OALAG,qBAAU,WACRd,EAASD,KACTQ,QAAQC,IAAIR,EAASD,QACpB,CAACC,IAGF,sBAAKe,UAAU,MAAf,UACE,uCACCJ,EAAMK,KAAI,SAAAC,GAAI,OACb,yCACSA,EAAKC,KACZ,uBAFF,UAGUD,EAAKE,MACb,uBAJF,gBAKgBF,EAAKG,sB,uBCXdC,cAAgB,CAAEV,MAXnB,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIW,EAAW,uCACpC,OAAQA,EAAOjB,MACb,IAAK,YACH,OAAOiB,EAAOhB,QAChB,IAAK,SACH,MAAM,GAAN,mBAAWK,GAAX,CAAkBW,EAAOhB,UAC3B,QACE,OAAOK,MCAPY,EAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAE5DC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.0d09c32b.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// const url = \"https://rentyhq.herokuapp.com/items\";  //live deploy\nconst url = \"http://localhost:5000/items\"; // local deploy\n\nconst fetchItemsAPI = () => axios.get(url);\nconst createItemAPI = (newItem) => axios.post(url, newItem);\n\nexport const getItems = () => async (dispatch) => {\n  try {\n    const { data } = await fetchItemsAPI();\n    dispatch({ type: \"FETCH_ALL\", payload: data });\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const createItem = (item) => async (dispatch) => {\n  try {\n    const { data } = await createItemAPI(item);\n    dispatch({ type: \"CREATE\", payload: data });\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { getItems } from \"./actions/item\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const items = useSelector((state) => state.items);  // state.items is coming from reducers/item.js\n\n  useEffect(() => {\n    dispatch(getItems());\n    console.log(dispatch(getItems()))\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>RENTY</h1>\n      {items.map(item =>\n        <div>\n          Tags: {item.tags}\n          <br></br>\n          Title: {item.title}\n          <br></br>\n          Description: {item.description}\n        </div>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst items = (items = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"CREATE\":\n      return [...items, action.payload];\n    default:\n      return items;\n  }\n}\n\nexport default combineReducers({ items })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}